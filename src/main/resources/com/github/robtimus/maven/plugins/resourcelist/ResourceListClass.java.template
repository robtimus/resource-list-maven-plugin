package ${package};

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.UncheckedIOException;
import java.nio.charset.StandardCharsets;
import java.util.List;
import java.util.Objects;
import java.util.function.Consumer;
import java.util.stream.Collectors;
import java.util.stream.Stream;
import javax.annotation.Generated;

@Generated("resource-list-maven-plugin")
${visibility}final class ${className} {

    private static final String RESOURCE_LIST_RESOURCE = "/${resourceListFile}";

    private ${className}() {
    }

    ${visibility}static Stream<String> stream() {
        BufferedReader reader = reader();
        return reader.lines().onClose(() -> {
            try {
                reader.close();
            } catch (IOException e) {
                throw new UncheckedIOException(e);
            }
        });
    }

    ${visibility}static List<String> list() {
        try (BufferedReader reader = reader()) {
            return reader.lines().collect(Collectors.toList());
        } catch (IOException e) {
            throw new UncheckedIOException(e);
        }
    }

    ${visibility}static void forEach(Consumer<? super String> action) {
        Objects.requireNonNull(action);
        try (BufferedReader reader = reader()) {
            reader.lines().forEach(action);
        } catch (IOException e) {
            throw new UncheckedIOException(e);
        }
    }

    private static BufferedReader reader() {
        InputStream inputStream = ${className}.class.getResourceAsStream(RESOURCE_LIST_RESOURCE);
        InputStreamReader inputStreamReader = new InputStreamReader(inputStream, StandardCharsets.UTF_8);
        return new BufferedReader(inputStreamReader);
    }
}
